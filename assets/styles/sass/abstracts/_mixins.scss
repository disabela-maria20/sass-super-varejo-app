@use "variables" as variable;

@mixin media($breakpoint) {
  @if $breakpoint == "xs" {
    @media (min-width: map-get(variable.$grid-breakpoints, xs)) {
      @content;
    }
  } @else if $breakpoint == "sm" {
    @media (min-width: map-get(variable.$grid-breakpoints, sm)) {
      @content;
    }
  } @else if $breakpoint == "md" {
    @media (min-width: map-get(variable.$grid-breakpoints, md)) {
      @content;
    }
  } @else if $breakpoint == "lg" {
    @media (min-width: map-get(variable.$grid-breakpoints, lg)) {
      @content;
    }
  } @else if $breakpoint == "xl" {
    @media (min-width: map-get(variable.$grid-breakpoints, xl)) {
      @content;
    }
  } @else if $breakpoint == "xxl" {
    @media (min-width: map-get(variable.$grid-breakpoints, xxl)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin input {
  background-color: getColor(secondary-theme-color);
  color: $tertiary-lingh-color;
  border: none;
  height: 42px;
  width: 100%;
  border-radius: $border-radius;
  padding: 0 15px;
  font-size: 15px;
  font-weight: 400;

  &:focus-within {
    outline-width: 2px;
    outline-style: solid;
    outline-color: getColor(tertiary-theme-color);
  }
  &::placeholder {
    font-weight: 600;
  }
  @include media(md) {
    font-size: 18px;
  }
}
@mixin linksMenu {
  color: getColor(primary-theme-colors-reverse);
  font-weight: 900;
  font-size: 15px;
  transition: color 0.2s ease-in-out;
  text-decoration: none;
  &:hover {
    color: $primary-colors;
  }

  @include media(md) {
    font-size: 18px;
  }
}

@mixin links {
  color: $dark-colos !important;
  font-weight: 900;
  font-size: 15px;
  transition: opacity 0.2s ease-in-out;
  text-decoration: none;
  &:hover {
    opacity: 0.6;
  }

  @include media(md) {
    font-size: 18px;
  }
}

@mixin paragraph {
  font-size: 15px;
  color: getColor(primary-theme-colors-reverse);
  font-weight: 400;
  @include media(lg) {
    font-size: 18px;
  }
}

@mixin cta {
  background-color: $primary-colors;
  color: $primary-lingh-color;
  border-radius: 5px;
  padding: 5px 20px;
  transition: background-color 0.2s ease-in-out;
  border: none;

  &:hover {
    color: $primary-lingh-color;
    text-decoration: none;
    background-color: darken($primary-colors, 10%);
  }
  &:focus-within {
    outline: none;
  }
}

@mixin subTitle {
  font-size: 22px;
  font-weight: 700;
  line-height: 1.2;
  color: getColor(primary-theme-colors-reverse);
  @include media(lg) {
    font-size: 28px;
  }
}

@mixin linkArrow {
  text-transform: capitalize;
  position: relative;
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
  &::after {
    content: "";
    transition: all 0.2s ease-in-out;
    position: absolute;
    background: url(../../images/right.png);
    width: 11px;
    height: 8px;
    top: 7px;
    margin-left: 5px;
  }
  &:hover::after {
    margin-left: 10px;
  }
}

@mixin subTitleH2 {
  font-size: 31px;
  font-weight: 700;
  color: getColor(primary-theme-colors-reverse);
}

@mixin Title {
  font-size: 35px;
  font-weight: 700;
  line-height: 1.2;
  color: getColor(primary-theme-colors-reverse);
  @include media(lg) {
    font-size: 38px;
  }
}

$cores: (#a06253, #48a9c2, #4b0082, #07dbfd, #b22222);

@for $i from 1 through length($cores) {
  .card_badge-#{$i} {
    background-color: nth($cores, $i);
  }
}

$cores-badge-bg: (#b9bda4, #48a9c2, #b22222);

@for $i from 1 through length($cores-badge-bg) {
  .bg_badge-#{$i} {
    background-color: nth($cores-badge-bg, $i);
  }
}
