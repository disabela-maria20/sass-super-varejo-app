// Color
$primary-colors: #beba33;
$primary-lingh-color: #fff;

$secondary-colors: #701ea9;
$primary-lingh-colors: #e4e4e4;
$secondary-lingh-color: #e5e5e5;
$tertiary-lingh-color: #b4b4b4;

$dark-colos: #000000;
$quaternary-indigo-colos: #201a46;

$danger-color: #d62b2b;
$podcast-color: #1ed760;

//defining scss variable
//light theme
$colors: (
  primary-theme-color: #ffffff,
  primary-theme-colors: #e4e4e4,
  secondary-theme-color: #ededed,
  tertiary-theme-color: #b4b4b4,
  secondary-theme-color-reverse: #333333,
  primary-dark-theme-color: #000000,
  primary-theme-colors-reverse: #000,
  tertiary-theme-colors-reverse: #000,
);
//dark theme
$colors-dark: (
  primary-theme-color: #000000,
  primary-theme-colors: #1b1b1b,
  secondary-theme-color: #333333,
  secondary-theme-color-reverse: #ededed,
  tertiary-theme-color: #313131,
  primary-dark-theme-color: #1a1a1a,
  primary-theme-colors-reverse: #fff,
  tertiary-theme-colors-reverse: #d4d4d4,
);
//converting scss variable into css variable
:root {
  @each $name, $color in $colors {
    --color-#{$name}: #{$color};
  }
  --theme: "light";
}

@media (prefers-color-scheme: dark) {
  :root {
    @each $name, $color in $colors-dark {
      --color-#{$name}: #{$color};
    }
    --theme: "dark";
  }
}
//creating a function to get color instead of using css varible
@function getColor($color-name) {
  @return var(--color-#{$color-name});
}

// Breakpoints
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

// Font
$font-primary: "din-2014", sans-serif;
$font-secondary: "din-2014", sans-serif;

// Border Radius
$border-radius: 10px;
